#include <iostream>

#include <ctime>

using namespace std;


//первая функция (Тодуа Алекс)

double* function_1(double* mas, int len) //в функцию передаются указатель на исходный массив и длина этого массива
{
    double* n_mas = new double[len]; //выделяется память под массив
    for (int i = 0; i < len; i++) //заполняется массив элементами из исходного массива
        n_mas[i] = mas[i]; 
    for(int i = 0; i < len-1; i++) //массив сортируется по убыванию методом пузырька 
        for (int j = i+1; j < len; j++) //перебираются по очереди все пары элементов
        {
            if (n_mas[i] < n_mas[j]) //если текущий элемент меньше последующего, они меняются местами
            {
                float t = n_mas[i];
                n_mas[i] = n_mas[j];
                n_mas[j] = t;
            }
        }
    return n_mas; //функция возвращает указатель на изменённый массив
}


//вторая функция (Исмайлова Алина)

double* function_2(double* mas, int a, int len) //в функцию передаются указатель на исходный массив, аргумент для дробной части и длина этого массива
{
    double* n_mas = new double[len]; //выделяется память под массив
    for (int j = 0; j < len; j++) //заполняется массив элементами из исходного массива
        n_mas[j] = mas[j];
    double na = a; //преобразуется аргумент к типу double 
    int i = 0;
    while (na >= 1) //аргумент делится на 10 до тех пор, пока не получится дробное значение
        na = na / 10.0;
    for (int i = 0; i < len; i++) //перебираются все элементы массива
    {
        if (n_mas[i] >= 0) //если элемент больше нуля, то выделяется целую часть и к ней прибавляется значение аргумента
            n_mas[i] = int(n_mas[i]) + na;
        else //если элемент меньше нуля, то выделяется целую часть и из неё вычитается значение аргумента
            n_mas[i] = int(n_mas[i]) - na;
    }
    return n_mas; //функция возвращает указатель на изменённый массив
}


//третья функция (Белеков Элхан)

void function_3(double* mas, int len) //в функцию передаются указатель на исходный массив и длина этого массива
{
    double max = mas[0] * mas[1]; //произведение первых двух чисел объявляется максимальным
    double min = mas[0] * mas[1]; //произведение первых двух чисел объявляется минимальным
    double max_1, max_2, min_1, min_2;
    for(int i = 0; i < len-1; i ++) //перебираются все пары элементов массива
        for(int j = i+1; j < len; j ++)
        {
           if (mas[i] * mas[j] >= max) //если произведение пары больше текущего максимального произведения,
           { //то это пара чисел запоминается, а текущее максимальное произведение заменяется на произведение этой пары
               max = mas[i] * mas[j];
               max_1 = mas[i];
               max_2 = mas[j];
           }
            if (mas[i] * mas[j] <= min) //если произведение пары меньше текущего минимального произведения
           { //то это пара чисел запоминается, а текущее минимальное произведение заменяется на произведение этой пары
               min = mas[i] * mas[j];
               min_1 = mas[i];
               min_2 = mas[j];
           }
        }
    cout << "Пара с максимальным произведением: " << max_1 << ", " << max_2 <<"\nПара с минимальным произведением: " << min_1 << ", " << min_2 << endl;
}


//четвёртая функция (Токтогонов Арсен)

double* function_4( double *m, int length) //в функцию передаются указатель на исходный массив и длина этого массива
{
    srand(time(0));
    double* n_m = new double[length]; //выделяется память под массив
    for (int i = 0; i < length; i++) //заполняется массив элементами из исходного массива
        n_m[i] = m[i];
    for (int i = 0; i < length; i++) //перебираются все элементы массива
    {
        int j = 0 + rand() % length; //индексу присваивается рандомное значение от нуля до значения длины массива (не включительно)
        double s = n_m[j]; //текущий элемент меняется местами с элементом под рандомным индексом
        n_m[j] = n_m[i];
        n_m[i] = s;
    }
    return n_m; //функция возвращает указатель на изменённый массив
}


int main()
{
    setlocale(LC_ALL, "Russian");
    double m[6] = {0.8, -15.9, 13.9, 40.4, -100.456, 123.222}; //исходный массив
    int length = sizeof(m)/sizeof(m[0]); //длина массива
    double* res;
    int a;
    cout << "Введите аргумент для второй функции -> ";
    cin >> a;
    
    res = function_1(m, length); //вызов первой функции
    cout << '\n' << "Функция №1: ";
    for (int i = 0; i < length; i++) //вывод результата на экран
        cout << res[i] << "  ";
        
    res = function_2(m, a, length); //вызов второй функции
    cout << '\n' << '\n' << "Функция №2: ";
    for (int i = 0; i < length; i++) //вывод результата на экран
        cout << res[i] << "  ";
        
    cout << '\n' << '\n' << "Функция №3: " << '\n';
    function_3(m, length); //вызов третьей функции
    
    res = function_4(m, length); //вызов четвёртой функции
    cout << '\n'  << "Функция №4: ";
    for (int i = 0; i < length; i++)//вывод результата на экран
        cout << res[i] << "  ";
    
    delete [] res; //освобождение памяти
    return 0;
}
